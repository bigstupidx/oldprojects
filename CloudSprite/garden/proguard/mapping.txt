com.cooee.wallpaper.framework.AAConfigChooser -> com.cooee.wallpaper.framework.a:
    int eglVersion -> a
    boolean withAlpha -> b
    int bufferSize -> c
    int depth -> d
    int samples -> e
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    void error() -> a
    void fixConfigSpec(int[]) -> a
com.cooee.wallpaper.framework.ConfigMode -> com.cooee.wallpaper.framework.b:
    void setAAMode(int) -> a
com.cooee.wallpaper.framework.GLWallpaperRenderer -> com.cooee.wallpaper.framework.c:
    void onOffsetsChanged(float,float,float,float,int,int) -> a
    void onTouchEvent(android.view.MotionEvent) -> a
com.cooee.wallpaper.framework.GLWallpaperService -> com.cooee.wallpaper.framework.GLWallpaperService:
com.cooee.wallpaper.framework.GLWallpaperService$GLEngine -> com.cooee.wallpaper.framework.d:
    com.cooee.wallpaper.framework.GLWallpaperService$GLEngine$WallpaperGLSurfaceView glSurfaceView -> b
    boolean rendererHasBeenSet -> c
    com.cooee.wallpaper.framework.GLWallpaperService this$0 -> a
    void onCreate(android.view.SurfaceHolder) -> onCreate
    void onVisibilityChanged(boolean) -> onVisibilityChanged
    void onDestroy() -> onDestroy
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> a
    void setEGLContextClientVersion(int) -> a
com.cooee.wallpaper.framework.GLWallpaperService$GLEngine$WallpaperGLSurfaceView -> com.cooee.wallpaper.framework.e:
    com.cooee.wallpaper.framework.GLWallpaperService$GLEngine this$1 -> a
    android.view.SurfaceHolder getHolder() -> getHolder
    void onDestroy() -> a
com.cooee.wallpaper.framework.Logger -> com.cooee.wallpaper.framework.f:
    int mode -> b
    int logLevel -> c
    java.lang.String[] HEAD -> d
    java.util.HashMap map -> a
    void setOnError(int) -> a
    void setLogLevel(int) -> b
    void log(java.lang.String) -> a
    void log(java.lang.String,java.lang.String) -> a
    void log(java.lang.String,int) -> a
    void log(java.lang.String,java.lang.String,int) -> a
    void ps(java.lang.String) -> b
    void pt(java.lang.String) -> c
com.cooee.wallpaper.framework.OpenGLES2WallpaperService -> com.cooee.wallpaper.framework.OpenGLES2WallpaperService:
    android.service.wallpaper.WallpaperService$Engine onCreateEngine() -> onCreateEngine
    android.service.wallpaper.WallpaperService$Engine createOpenGLES1Engine() -> a
    com.cooee.wallpaper.framework.GLWallpaperRenderer getNewRenderer() -> b
com.cooee.wallpaper.framework.OpenGLES2WallpaperService$OpenGLES1Engine -> com.cooee.wallpaper.framework.g:
    com.cooee.wallpaper.framework.OpenGLES2WallpaperService this$0 -> b
    void onCreate(android.view.SurfaceHolder) -> onCreate
com.cooee.wallpaper.framework.OpenGLES2WallpaperService$OpenGLES2Engine -> com.cooee.wallpaper.framework.h:
    com.cooee.wallpaper.framework.OpenGLES2WallpaperService this$0 -> b
    void onCreate(android.view.SurfaceHolder) -> onCreate
com.cooee.wallpaper.framework.OpenGLES2WallpaperService$OpenGLESEngine -> com.cooee.wallpaper.framework.i:
    com.cooee.wallpaper.framework.GLWallpaperRenderer renderer -> c
    com.cooee.wallpaper.framework.OpenGLES2WallpaperService this$0 -> d
    void onCreate(android.view.SurfaceHolder) -> onCreate
    void onOffsetsChanged(float,float,float,float,int,int) -> onOffsetsChanged
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.cooee.wallpaper.lotus.Animation -> com.cooee.wallpaper.lotus.a:
    com.threed.jpct.Object3D obj -> a
    float ind -> b
com.cooee.wallpaper.lotus.IRenderer -> com.cooee.wallpaper.lotus.b:
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> a
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> a
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> a
    void onTouchEvent(android.view.MotionEvent) -> a
com.cooee.wallpaper.lotus.Lotus -> com.cooee.wallpaper.lotus.c:
    com.cooee.wallpaper.lotus.Lotus master -> b
    com.cooee.wallpaper.lotus.Lotus gInstance -> c
    android.content.Context context -> d
    com.threed.jpct.FrameBuffer fb -> e
    com.threed.jpct.World world -> f
    com.threed.jpct.World bgWorld -> g
    com.threed.jpct.GLSLShader shader -> h
    com.threed.jpct.Object3D lightObj -> i
    com.threed.jpct.Object3D dripObj -> j
    com.cooee.wallpaper.lotus.Animation[] animations -> k
    float animationSecond -> l
    long ct -> m
    com.threed.jpct.SimpleVector camPosition -> n
    com.threed.jpct.SimpleVector camLookAt -> o
    float camAngle -> a
    float touchX -> p
    float flingA -> q
    float flingV -> r
    float minFlingV -> s
    boolean showFPS -> t
    int fps_count -> u
    float fps_dt -> v
    float fps -> w
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> a
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> a
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> a
    void onTouchEvent(android.view.MotionEvent) -> a
    void resetCamera() -> a
    void rotate(float) -> a
    void animate(float) -> b
    com.threed.jpct.Object3D loadmd2(java.lang.String,int) -> a
    com.threed.jpct.Object3D load3ds(java.lang.String,int) -> b
    com.threed.jpct.Object3D loadModel(java.lang.String,float) -> a
    com.threed.jpct.Texture loadTexture(int) -> a
    void drawFPS(long) -> a
    void resetState() -> b
com.cooee.wallpaper.lotus.MainActivity -> com.cooee.wallpaper.lotus.MainActivity:
    android.opengl.GLSurfaceView mGLView -> a
    com.cooee.wallpaper.lotus.Renderer renderer -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    com.cooee.wallpaper.lotus.Renderer access$0(com.cooee.wallpaper.lotus.MainActivity) -> a
com.cooee.wallpaper.lotus.MainActivity$1 -> com.cooee.wallpaper.lotus.d:
    com.cooee.wallpaper.lotus.MainActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.cooee.wallpaper.lotus.Renderer -> com.cooee.wallpaper.lotus.e:
    com.cooee.wallpaper.lotus.IRenderer iRenderer -> a
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onOffsetsChanged(float,float,float,float,int,int) -> a
    void onTouchEvent(android.view.MotionEvent) -> a
com.cooee.wallpaper.lotus.WallpaperService -> com.cooee.wallpaper.lotus.WallpaperService:
    com.cooee.wallpaper.framework.GLWallpaperRenderer getNewRenderer() -> b
    android.service.wallpaper.WallpaperService$Engine onCreateEngine() -> onCreateEngine
com.threed.jpct.Animation -> com.a.a.a:
    int aktFrames -> a
    com.threed.jpct.Mesh[] keyFrames -> b
    int endFrame -> c
    int maxFrames -> d
    int mode -> e
    int[] startFrames -> f
    int[] endFrames -> g
    java.lang.String[] seqNames -> h
    int anzAnim -> i
    int wrapMode -> j
    int lastFrame -> l
    boolean cacheIndices -> k
    com.threed.jpct.Mesh[] getKeyFrames() -> a
    int createSubSequence(java.lang.String) -> a
    void addKeyFrame(com.threed.jpct.Mesh) -> a
    void rotateMesh(com.threed.jpct.Matrix,float,float,float,float) -> a
    void doAnimation(com.threed.jpct.Object3D,int,float) -> a
    void interpolateLinear(com.threed.jpct.Object3D,int,float,int,int) -> a
    void interpolateNone(com.threed.jpct.Object3D,int,int,int) -> a
    void validate(com.threed.jpct.Object3D) -> a
com.threed.jpct.BufferUtil -> com.a.a.b:
    void copy(float[],com.threed.jpct.FloatBufferWrapper) -> a
com.threed.jpct.BufferUtilFactory -> com.a.a.c:
    boolean nativeSupport -> a
    com.threed.jpct.BufferUtil util -> b
    com.threed.jpct.BufferUtil getBufferUtil() -> a
    boolean hasNativeSupport() -> b
com.threed.jpct.BufferUtilNative -> com.a.a.d:
    void copy(float[],com.threed.jpct.FloatBufferWrapper) -> a
com.threed.jpct.BufferUtilVM -> com.a.a.e:
    void copy(float[],com.threed.jpct.FloatBufferWrapper) -> a
com.threed.jpct.Camera -> com.a.a.f:
    float scaleX -> a
    float scaleY -> b
    float divx -> c
    float divy -> d
    com.threed.jpct.Matrix backMatrix -> e
    com.threed.jpct.Matrix lookAtTmp -> f
    float backBx -> g
    float backBy -> h
    float backBz -> i
    int ellipsoidMode -> j
    float cameraFOV -> k
    float yFOV -> l
    float lowerLimit -> m
    float higherLimit -> n
    float[] workMatrix -> o
    com.threed.jpct.Matrix projectionMatrix -> p
    void calcFOV(int,int) -> a
    com.threed.jpct.SimpleVector getPosition() -> a
    com.threed.jpct.SimpleVector getPosition(com.threed.jpct.SimpleVector) -> a
    void setFOV(float) -> a
    float getFOV() -> b
    float getYFOV() -> c
    void lookAt(com.threed.jpct.SimpleVector) -> b
    void setPosition(com.threed.jpct.SimpleVector) -> c
    com.threed.jpct.Matrix getBack() -> d
com.threed.jpct.CompiledInstance -> com.a.a.g:
    int BUFFER_SIZE -> a
    int[] smallBufferOne -> b
    int[] smallBufferTwo -> c
    int[][] smallBufferMT -> d
    int[] sbPosMT -> e
    int[] smallBufferThree -> f
    int[] smallBuffer -> g
    int[] stageMap -> h
    float[] ALL_ONES -> i
    float[] ALL_ONES_3 -> j
    float[] ZEROS_ONE -> k
    float[] ALL_ZEROS -> l
    float[] allOnes3 -> m
    float[] lights4 -> n
    float[] STATIC_DUMPY -> o
    int sbPosThree -> p
    int sbPosOne -> q
    int sbPosTwo -> r
    int[] LIGHTS -> s
    com.threed.jpct.Matrix mat -> t
    com.threed.jpct.Matrix mo -> u
    com.threed.jpct.Object3D lastObj -> v
    float chkSum -> w
    int lastLightCnt -> x
    java.nio.Buffer lastVertexBuffer -> y
    boolean dynamic -> z
    com.threed.jpct.Object3D obj -> A
    java.nio.IntBuffer normals -> B
    java.nio.IntBuffer vertices -> C
    java.nio.IntBuffer colors -> D
    java.nio.IntBuffer tangents -> E
    java.nio.ShortBuffer indices -> F
    java.nio.IntBuffer[] multiTextures -> G
    int normalsId -> H
    int verticesId -> I
    int colorsId -> J
    int indicesId -> K
    int tangentsId -> L
    int[] multiTexturesIds -> M
    com.threed.jpct.IntList tris -> N
    int cnt -> O
    int polyIndex -> P
    int endStage -> Q
    boolean indexed -> R
    boolean staticUV -> S
    int treeID -> T
    java.lang.String key -> U
    int tex0 -> V
    int tex1 -> W
    int lastTex0 -> X
    int lastTex1 -> Y
    java.util.HashMap vertex2index -> Z
    int rendererID -> aa
    com.threed.jpct.GLRenderer lastRenderer -> ab
    boolean filled -> ac
    float[] dumpy -> ad
    boolean needsCoordMapper -> ae
    int[] coordMapper -> af
    int[] vcoords -> ag
    int[] ncoords -> ah
    boolean buffersCreated -> ai
    boolean vboPossible -> aj
    int useStrip -> ak
    int primitiveType -> al
    int indexCount -> am
    boolean firstCompile -> an
    boolean hasBeenRefilled -> ao
    boolean hasBeenVirtualized -> ap
    void setKey(java.lang.String) -> a
    int getTreeID() -> a
    int getPolyIndex() -> b
    int getStageCount() -> c
    void dispose(com.threed.jpct.GLRenderer) -> a
    void render(int,com.threed.jpct.GLRenderer,float[],float[],boolean,com.threed.jpct.Camera,float[][],boolean) -> a
    void copy(com.threed.jpct.CompiledInstance) -> a
    void add(int) -> a
    void fill() -> d
    void _fill() -> e
    void compileToVBO(javax.microedition.khronos.opengles.GL11,com.threed.jpct.GLRenderer) -> a
    void bufferError() -> f
    java.nio.Buffer flip(java.nio.Buffer,int) -> a
    void checkStrips() -> g
    boolean compare(float[],float[]) -> a
    void finalize() -> finalize
com.threed.jpct.CompiledInstanceFP -> com.a.a.h:
    com.threed.jpct.FloatBufferWrapper vertices -> aq
    com.threed.jpct.FloatBufferWrapper normals -> ar
    float[] vcoords -> as
    float[] ncoords -> at
    float[] smallBufferOneF -> au
    float[] smallBufferTwoF -> av
    void render(int,com.threed.jpct.GLRenderer,float[],float[],boolean,com.threed.jpct.Camera,float[][],boolean) -> a
    void copy(com.threed.jpct.CompiledInstance) -> a
    void fill() -> d
    void _fill() -> e
    void compileToVBO(javax.microedition.khronos.opengles.GL11,com.threed.jpct.GLRenderer) -> a
com.threed.jpct.Config -> com.a.a.i:
    float defaultCameraFOV -> a
    boolean autoMaintainAspectRatio -> b
    int maxTextures -> c
    int maxPolysVisible -> d
    int maxLights -> e
    int maxAnimationSubSequences -> f
    float collideOffset -> g
    float collideEdgeMul -> h
    float collideSectorOffset -> i
    float collideEllipsoidThreshold -> j
    int flashSortThreshold -> k
    boolean stateOrientedSorting -> l
    float nearPlane -> m
    float farPlane -> n
    float viewportOffsetX -> o
    float viewportOffsetY -> p
    int maxParentObjects -> q
    float specTerm -> r
    float specPow -> s
    int maxTextureLayers -> t
    float glTransparencyOffset -> u
    float glTransparencyMul -> v
    boolean internalMipmapCreation -> w
    boolean glIgnoreNearPlane -> x
    boolean glTriangleStrips -> y
    boolean glDither -> z
    int glDebugLevel -> A
    boolean glTrilinear -> B
    boolean glForceEnvMapToSecondStage -> C
    boolean glUseIgnorantBlits -> D
    boolean glRevertADDtoMODULATE -> E
    int glBatchSize -> F
    boolean glForceHighPrecision -> G
    boolean renderTargetsAsSubImages -> H
    boolean useVBO -> I
    int polygonIDLimit -> J
    int vectorCacheSize -> K
    int vertexBufferSize -> L
    boolean aggressiveStripping -> M
    boolean disableNativeBufferCopies -> N
    boolean unloadImmediately -> O
    boolean useRotationPivotFrom3DS -> P
    boolean useNormalsFromOBJ -> Q
    boolean oldStyle3DSLoader -> R
    boolean cacheCompressedTextures -> S
    int aaMode -> T
    int loadMaxVerticesASC -> U
    int loadMaxTrianglesASC -> V
    boolean useFBO -> W
    boolean glIgnoreAlphaBlendingFBO -> X
    int glStageCount -> Y
    boolean fadeoutLight -> Z
    float linearDiv -> aa
    float lightDiscardDistance -> ab
com.threed.jpct.DepthBuffer -> com.a.a.j:
com.threed.jpct.FloatBufferWrapper -> com.a.a.k:
    java.nio.ByteBuffer bytes -> a
    java.nio.FloatBuffer floats -> b
    java.nio.IntBuffer ints -> c
    int[] intArray -> d
    void put(float) -> a
    void put(float[],int,int) -> a
    void put(float[]) -> a
    int capacity() -> a
    int position() -> b
    int limit() -> c
    void rewind() -> d
    java.nio.ByteBuffer getByteBuffer() -> e
com.threed.jpct.FrameBuffer -> com.a.a.l:
    int versionHint -> a
    long sid -> n
    float middleX -> b
    float middleY -> c
    int width -> d
    int height -> e
    com.threed.jpct.GLRenderer glRend -> f
    boolean hasRenderTarget -> g
    com.threed.jpct.Texture renderTarget -> h
    long displayCycle -> i
    java.util.ArrayList usedBy -> o
    java.util.ArrayList postProcessors -> p
    java.lang.Long id -> q
    int openGlVersion -> r
    boolean initialized -> j
    int virtualHeight -> k
    int virtualWidth -> l
    int length -> m
    java.lang.Long getID() -> a
    void removePostProcessor(com.threed.jpct.IPostProcessor) -> a
    void removeAllPostProcessors() -> b
    void dispose() -> c
    int getWidth() -> d
    int getHeight() -> e
    void clear() -> f
    void clear(com.threed.jpct.RGBColor) -> a
    void blit(com.threed.jpct.Texture,int,int,int,int,int,int,int,int,int,boolean,com.threed.jpct.RGBColor) -> a
    void display() -> g
    void incCounter() -> h
    void register(com.threed.jpct.VisListManager) -> a
    void checkListeners() -> i
    void removeListeners() -> j
    void finalize() -> finalize
com.threed.jpct.GL20 -> com.a.a.m:
    int NEXT -> a
    com.threed.jpct.GLSLShader defaultShader -> b
    com.threed.jpct.GLSLShader defaultShaderTex0 -> c
    com.threed.jpct.GLSLShader defaultShaderTex1 -> d
    com.threed.jpct.GLSLShader defaultShaderTex0Light0 -> e
    com.threed.jpct.GLSLShader defaultShaderFog -> f
    com.threed.jpct.GLSLShader defaultShaderFogLight0 -> g
    com.threed.jpct.GLSLShader defaultShaderTex0Amb -> h
    com.threed.jpct.GLSLShader defaultShaderDepth -> i
    com.threed.jpct.GLSLShader userShader -> j
    float[] curColor -> k
    int currentTextureStage -> l
    java.util.BitSet textureStates -> m
    int[] textureModes -> n
    int textureCombineRgb -> o
    int textureRgbScale -> p
    boolean flatShading -> q
    float[] currentMatrixPointer -> r
    float[] projectionMatrix -> s
    float[] modelviewMatrix -> t
    float[] textureMatrix -> u
    float[] tempMatrix -> v
    boolean textureMatrixUsed -> w
    com.threed.jpct.GLSLShader activeShader -> x
    float alpha -> y
    boolean useColors -> z
    float[] additionalColor -> A
    float[] ambientColor -> B
    float[] lightPositions -> C
    float[] diffuseColors -> D
    float[] specularColors -> E
    float[] attenuation -> F
    float shininess -> G
    int lightCount -> H
    boolean fogEnabled -> I
    float fogStart -> J
    float fogEnd -> K
    float[] fogColor -> L
    boolean lightsEnabled -> M
    java.util.BitSet lightsState -> N
    int id -> O
    int fbo -> P
    int fboTexture -> Q
    boolean depthMode -> R
    com.threed.jpct.GLSLShader storedShader -> S
    com.threed.jpct.GLSLShader storedUserShader -> T
    com.threed.jpct.Texture fboColorStorage -> U
    com.threed.jpct.Texture fboDepthStorage -> V
    java.nio.IntBuffer buffy4 -> W
    void checkError(java.lang.String) -> a
    void reset() -> a
    com.threed.jpct.GLSLShader updateShaderData() -> b
    void resetShaderData() -> c
    void setShader(com.threed.jpct.GLSLShader) -> a
    void clearShader() -> d
    void glActiveTexture(int) -> glActiveTexture
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glAlphaFuncx(int,int) -> glAlphaFuncx
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearColorx(int,int,int,int) -> glClearColorx
    void glClearDepthf(float) -> glClearDepthf
    void glClearDepthx(int) -> glClearDepthx
    void glClearStencil(int) -> glClearStencil
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColor4x(int,int,int,int) -> glColor4x
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDepthRangex(int,int) -> glDepthRangex
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> glDisableClientState
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> glEnableClientState
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFogf(int,float) -> glFogf
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFogfv(int,float[],int) -> glFogfv
    void glFogx(int,int) -> glFogx
    void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    void glFogxv(int,int[],int) -> glFogxv
    void glFrontFace(int) -> glFrontFace
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    void glGenTextures(int,int[],int) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightModelx(int,int) -> glLightModelx
    void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    void glLightModelxv(int,int[],int) -> glLightModelxv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLightx(int,int,int) -> glLightx
    void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    void glLightxv(int,int,int[],int) -> glLightxv
    void glLineWidth(float) -> glLineWidth
    void glLineWidthx(int) -> glLineWidthx
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    void glLoadMatrixx(int[],int) -> glLoadMatrixx
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMaterialx(int,int,int) -> glMaterialx
    void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    void glMaterialxv(int,int,int[],int) -> glMaterialxv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    void glMultMatrixx(int[],int) -> glMultMatrixx
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormal3x(int,int,int) -> glNormal3x
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glOrthox(int,int,int,int,int,int) -> glOrthox
    void glPixelStorei(int,int) -> glPixelStorei
    void glPointSize(float) -> glPointSize
    void glPointSizex(int) -> glPointSizex
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glRotatef(float,float,float,float) -> glRotatef
    void glRotatex(int,int,int,int) -> glRotatex
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    void glScalef(float,float,float) -> glScalef
    void glScalex(int,int,int) -> glScalex
    void glScissor(int,int,int,int) -> glScissor
    void glShadeModel(int) -> glShadeModel
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glTexEnvx(int,int,int) -> glTexEnvx
    void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterx(int,int,int) -> glTexParameterx
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glTranslatef(float,float,float) -> glTranslatef
    void glTranslatex(int,int,int) -> glTranslatex
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glViewport(int,int,int,int) -> glViewport
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    void glClipPlanex(int,int[],int) -> glClipPlanex
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glColorPointer(int,int,int,int) -> glColorPointer
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    void glGetFixedv(int,int[],int) -> glGetFixedv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    void glGetLightxv(int,int,int[],int) -> glGetLightxv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glNormalPointer(int,int,int) -> glNormalPointer
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glPointParameterx(int,int) -> glPointParameterx
    void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    void glPointParameterxv(int,int[],int) -> glPointParameterxv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
    void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    void glVertexPointer(int,int,int,int) -> glVertexPointer
    int getTextureStageIndex() -> f
    boolean hasCap(int) -> c
    boolean uploadTexture(int,int,int,int,boolean,java.nio.ByteBuffer) -> a
    void setTangents(java.nio.Buffer) -> a
    void setTangents(int) -> a
    void clearTangents(int) -> b
    void clearTangents() -> e
    void setIdentity(float[]) -> a
    void unloadRenderTarget(com.threed.jpct.Texture) -> a
com.threed.jpct.GL20CompLayer -> com.a.a.n:
    java.lang.String getVertexShaderName() -> a
    java.lang.String getFragmentShaderName() -> b
com.threed.jpct.GL20Handler -> com.a.a.o:
    com.threed.jpct.GLSLShader updateShaderData() -> b
    void resetShaderData() -> c
    void setShader(com.threed.jpct.GLSLShader) -> a
    void clearShader() -> d
    void reset() -> a
    boolean uploadTexture(int,int,int,int,boolean,java.nio.ByteBuffer) -> a
    void setTangents(java.nio.Buffer) -> a
    void setTangents(int) -> a
    void clearTangents() -> e
    void clearTangents(int) -> b
    void unloadRenderTarget(com.threed.jpct.Texture) -> a
com.threed.jpct.GLDebug -> com.a.a.p:
    javax.microedition.khronos.opengles.GL gl -> a
    java.lang.StringBuilder sb -> b
    javax.microedition.khronos.opengles.GL create(javax.microedition.khronos.opengles.GL) -> a
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.threed.jpct.GLRenderer -> com.a.a.q:
    float COLOR_INV -> i
    int[] stageMap -> j
    int[] modeMap -> k
    int rendererID -> l
    int myID -> a
    float lastFOV -> m
    boolean lastFOVMode -> n
    boolean init -> o
    int stateChanges -> p
    com.threed.jpct.World myWorld -> q
    java.nio.IntBuffer pixelBuffer -> r
    int pixelBufferSize -> s
    com.threed.jpct.Texture blitBuffer -> t
    int blitBufferWidth -> u
    int blitBufferHeight -> v
    int currentRGBScaling -> w
    com.threed.jpct.TextureManager texMan -> x
    boolean wasTransparent -> y
    int lastTransMode -> z
    boolean vertexArraysInitialized -> A
    boolean disposed -> B
    com.threed.jpct.IPaintListener listener -> C
    boolean listenerActive -> D
    boolean[] stageInitialized -> E
    int[] lastTextures -> b
    int maxStages -> F
    int[] lastMultiTextures -> G
    int[] lastMultiModes -> H
    int[] lastMode -> I
    int minDriverAndConfig -> J
    int lastCoords -> K
    int veryLastCoords -> L
    int lastTexture -> M
    float lastFarPlane -> N
    java.nio.IntBuffer colors -> O
    int[] colorArray -> P
    java.nio.IntBuffer vertices -> Q
    int[] vertexArray -> R
    java.nio.IntBuffer textures -> S
    int[] textureArray -> T
    java.nio.ShortBuffer indices -> U
    short[] indexArray -> V
    com.threed.jpct.Texture renderTarget -> W
    int yTargetStart -> X
    int xViewStart -> Y
    int yViewStart -> Z
    int xViewEnd -> aa
    int yViewEnd -> ab
    com.threed.jpct.Matrix textureScale -> ac
    boolean[] enabledStages -> ad
    boolean singleTexturing -> ae
    int currentFogColor -> af
    boolean currentFoggingState -> ag
    float currentFogDistance -> ah
    java.nio.IntBuffer[] smallBuffer -> ai
    com.threed.jpct.SimpleVector blitCoords1 -> aj
    com.threed.jpct.SimpleVector blitCoords2 -> ak
    boolean depthBuffer -> al
    boolean blitMode -> am
    boolean blitTrans -> an
    boolean blitAdditive -> ao
    boolean scissorEnabled -> ap
    boolean scissorClearAll -> aq
    int blitScaling -> ar
    java.util.HashSet toUnload -> as
    java.util.HashMap matrixCache -> c
    javax.microedition.khronos.opengles.GL10 gl10 -> d
    javax.microedition.khronos.opengles.GL11 gl11 -> e
    boolean gl20 -> f
    boolean blending -> at
    float lastNearPlane -> au
    int curPos -> av
    int colPos -> aw
    int vertPos -> ax
    int texPos -> ay
    int indexPos -> az
    float[] ambient -> aA
    float[] cols -> aB
    float[] dumpy -> g
    java.util.List vbos -> aC
    boolean textureMatrixSet -> aD
    int lastActivatedStage -> aE
    boolean hasToReEnable -> aF
    boolean mipmapsByGpu -> aG
    java.util.Set uploadedTextures -> aH
    com.threed.jpct.GL20Handler gl20Handler -> aI
    java.nio.FloatBuffer fogColors -> aJ
    int lastWorldHash -> aK
    com.threed.jpct.Matrix tmpMat -> aL
    com.threed.jpct.Matrix moMat -> aM
    float[] cameraMatrix -> aN
    com.threed.jpct.GLSLShader lineColorShader -> aO
    float[] lineCol -> h
    java.lang.String extensions -> aP
    void resetStates() -> o
    void registerVBO(int) -> a
    void unregisterVBO(int) -> b
    void unsetBlendingMode() -> p
    void setDepthBuffer() -> q
    void setBlendingMode(int) -> f
    void resetTextureStates() -> r
    boolean renderToTarget() -> s
    void init(javax.microedition.khronos.opengles.GL10,int,int) -> a
    void init(javax.microedition.khronos.opengles.GL10,int,int,boolean) -> a
    void dispose() -> a
    void deleteBuffer(int) -> c
    void resetShader() -> b
    void setShader(com.threed.jpct.GLSLShader) -> a
    void clearShader() -> c
    com.threed.jpct.GLSLShader initShader() -> d
    void closeShader() -> e
    void setTangents(java.nio.Buffer) -> a
    void setTangents(int) -> d
    void clearTangents() -> f
    void clearTangents(int) -> e
    void clearStageFlag() -> g
    void initTextureStage(int,int) -> b
    void disableUnusedStages() -> t
    void enableStage(int) -> g
    void activateStage(int) -> h
    void disableStage(int) -> i
    void bindAndProject(int,com.threed.jpct.Texture) -> a
    void enableCompiledPipeline() -> u
    void disableCompiledPipeline() -> v
    void bindTexture(int,int) -> a
    void switchTextureMode(int,int) -> c
    void removeTexture(com.threed.jpct.Texture) -> a
    java.nio.IntBuffer getSmallBuffer(int) -> j
    void disableFogging() -> w
    void setRGBScaling(int) -> k
    void enableFogging(float,float,float,float,float) -> a
    void convertTexture(com.threed.jpct.Texture) -> b
    void uploadInternal(int,int,int,int,java.nio.ByteBuffer,com.threed.jpct.Texture) -> a
    void buildMipmap(javax.microedition.khronos.opengles.GL10,com.threed.jpct.Texture,int,int,int[]) -> a
    int[] rescale16(int[],int,int,boolean) -> a
    int[] rescale32(int[],int,int) -> a
    void enableDepthBuffer() -> x
    void disableDepthBuffer() -> y
    void enableColorArray() -> z
    void renableVertexArrays() -> A
    void enableBlitting(com.threed.jpct.FrameBuffer,boolean,boolean) -> a
    void disableBlitting() -> h
    void setLightsAndFog(com.threed.jpct.World) -> b
    void initializeVertexArrays() -> B
    void executeBufferedBlits() -> C
    void blit(com.threed.jpct.FrameBuffer,com.threed.jpct.Texture,float,float,int,int,int,int,boolean,int,int,int,int,int,int) -> a
    void unloadKnownTextures() -> i
    void unloadTextures() -> D
    int getTextureStages() -> E
    void initTextureStage(int) -> l
    void endState() -> j
    void blitTexture(com.threed.jpct.Texture,com.threed.jpct.FrameBuffer,int,int,int,int,int,int,boolean,boolean,int,int,int,int,int,int) -> a
    void setFrustumAndFog(com.threed.jpct.World,com.threed.jpct.FrameBuffer) -> a
    void swapBuffers() -> k
    void clear(com.threed.jpct.RGBColor) -> a
    void setBufferViewport(int,int,int,int) -> a
    void startPainting() -> l
    void endPainting() -> m
    void disposeProcessor(com.threed.jpct.IPostProcessor) -> a
    void setFrustum(com.threed.jpct.World,com.threed.jpct.FrameBuffer) -> b
    void enableLineMode(com.threed.jpct.World) -> a
    void disableLineMode() -> n
    void drawLine(com.threed.jpct.Polyline) -> a
    void setLineColor(com.threed.jpct.RGBColor) -> b
    void setLineShader() -> F
    void drawVertexArray(com.threed.jpct.VisList,int,int,com.threed.jpct.FrameBuffer,com.threed.jpct.World) -> a
    void drawWireframe(com.threed.jpct.VisList,int,int,com.threed.jpct.FrameBuffer) -> a
    void setTextureMatrix(com.threed.jpct.Matrix) -> a
    com.threed.jpct.Texture setTextures(com.threed.jpct.Object3D,int,int,com.threed.jpct.FrameBuffer,com.threed.jpct.World) -> a
    boolean hasExtension(java.lang.String) -> a
com.threed.jpct.GLSLShader -> com.a.a.r:
    java.util.Map REPLACEMENTS -> D
    int NEXT -> E
    int colorHandle -> a
    int vertexHandle -> b
    int normalHandle -> c
    int tangentHandle -> d
    int[] textureHandle -> e
    int[] textureUnitHandle -> f
    int mvpMatrixHandle -> g
    int pMatrixHandle -> h
    int mvMatrixHandle -> i
    int texMatrixHandle -> j
    int textureCountHandle -> k
    int blendingModeHandle -> l
    int useColorsHandle -> m
    int additionalColorHandle -> n
    int ambientColorHandle -> o
    int lightPositionsHandle -> p
    int diffuseColorsHandle -> q
    int specularColorsHandle -> r
    int attenuationHandle -> s
    int shininessHandle -> t
    int lightCountHandle -> u
    int fogStartHandle -> v
    int fogEndHandle -> w
    int fogColorHandle -> x
    int alphaHandle -> y
    boolean needsTangents -> z
    boolean init -> A
    int id -> B
    boolean directMode -> C
    int lastContext -> F
    int program -> G
    java.lang.String frgSource -> H
    java.lang.String vtxSource -> I
    boolean newUniforms -> J
    com.threed.jpct.GLSLShader$UniformMap uniforms -> K
    java.util.List toRemove -> L
    java.util.List keyTemp -> M
    com.threed.jpct.ShaderLocator locator -> N
    com.threed.jpct.Matrix tmp -> O
    float[] tmpFloats -> P
    com.threed.jpct.GLSLShader$Uniform tmpUniform -> Q
    void check20() -> f
    void preInit() -> a
    void init() -> g
    int getHandle(java.lang.String) -> a
    void setUniform(java.lang.String,float[]) -> a
    void activate(int) -> a
    void activate() -> b
    void dispose() -> c
    void recompile() -> d
    void checkContext(int) -> b
    void update() -> e
    void setUniform(com.threed.jpct.GLSLShader$Uniform) -> a
    int getLocation(java.lang.String) -> b
    void set(java.lang.String,float[],boolean) -> a
    void set(java.lang.String,float[],boolean,boolean) -> a
    void loadProgram(java.lang.String,java.lang.String) -> a
    int createProgram(int,int) -> a
    int loadShader(int,java.lang.String) -> a
    void checkError(java.lang.String) -> c
    void finalize() -> finalize
com.threed.jpct.GLSLShader$Uniform -> com.a.a.s:
    int type -> a
    int iValue -> b
    float fValue -> c
    float[] faValue -> d
    java.nio.FloatBuffer mValue -> e
    com.threed.jpct.SimpleVector sValue -> f
    float[] saData -> g
    int handle -> h
    boolean staticUniform -> i
    java.lang.String name -> j
    java.lang.String getName() -> a
    int getHandle() -> b
    void setHandle(int) -> a
    boolean hasHandle() -> c
    int getType() -> d
    void setType(int) -> b
    int getIntValue() -> e
    float getFloatValue() -> f
    float[] getFloatArrayValue() -> g
    java.nio.FloatBuffer getMatrixValue() -> h
    com.threed.jpct.SimpleVector getVectorValue() -> i
    float[] getVectorArrayValue() -> j
    void setValue(float[]) -> a
    void setStaticUniform(boolean) -> a
    boolean isStaticUniform() -> k
    java.lang.String access$0(com.threed.jpct.GLSLShader$Uniform) -> a
com.threed.jpct.GLSLShader$UniformMap -> com.a.a.t:
    java.util.List uniforms -> a
    java.util.Set keys -> b
    com.threed.jpct.GLSLShader$Uniform lastUniform -> c
    java.lang.String lastName -> d
    com.threed.jpct.GLSLShader$Uniform get(java.lang.String) -> a
    void put(java.lang.String,com.threed.jpct.GLSLShader$Uniform) -> a
    void remove(java.lang.String) -> b
    java.util.List values() -> a
    java.util.Set keySet() -> b
com.threed.jpct.GenericContainer -> com.a.a.u:
    int[] content -> a
    int pos -> b
    int hash -> c
    void add(float) -> a
    void clear() -> a
    void add(int) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(com.threed.jpct.GenericContainer) -> a
    int compareTo(java.lang.Object) -> compareTo
com.threed.jpct.GenericVertexController -> com.a.a.v:
    com.threed.jpct.SimpleVector[] meshTarget -> a
    com.threed.jpct.SimpleVector[] normalTarget -> b
    com.threed.jpct.Mesh mesh -> c
    int size -> d
    float x -> e
    float y -> f
    float z -> g
    float[] meshxOrg -> h
    float[] meshyOrg -> i
    float[] meshzOrg -> j
    float[] meshnxOrg -> k
    float[] meshnyOrg -> l
    float[] meshnzOrg -> m
    com.threed.jpct.SimpleVector[] getDestinationMesh() -> a
    void updateMesh() -> b
com.threed.jpct.IPaintListener -> com.a.a.w:
    void startPainting() -> a
    void finishedPainting() -> b
com.threed.jpct.IPostProcessor -> com.a.a.x:
    void dispose() -> a
com.threed.jpct.IRenderHook -> com.a.a.y:
    void beforeRendering(int) -> a
    void afterRendering(int) -> b
    void setCurrentObject3D(com.threed.jpct.Object3D) -> a
    void setCurrentShader(com.threed.jpct.GLSLShader) -> a
    void setTransparency(float) -> a
    void onDispose() -> a
    boolean repeatRendering() -> b
com.threed.jpct.ITextureEffect -> com.a.a.z:
com.threed.jpct.IVertexController -> com.a.a.aa:
    void apply() -> c
    void updateMesh() -> b
com.threed.jpct.IntList -> com.a.a.ab:
    int[] store -> a
    int cnt -> b
    void add(int) -> a
    int get(int) -> b
    int size() -> a
com.threed.jpct.IntegerC -> com.a.a.ac:
    java.lang.Integer[] CACHE -> a
    java.lang.Integer valueOf(int) -> a
com.threed.jpct.Interact2D -> com.a.a.ad:
    com.threed.jpct.Matrix workMat -> a
    com.threed.jpct.SimpleVector reproject2D3D(com.threed.jpct.Camera,com.threed.jpct.FrameBuffer,int,int,float,com.threed.jpct.SimpleVector) -> a
    com.threed.jpct.SimpleVector reproject2D3DBlit(float,float,com.threed.jpct.FrameBuffer,int,int,float,com.threed.jpct.SimpleVector) -> a
com.threed.jpct.Light -> com.a.a.ae:
    int light -> a
    boolean on -> b
    com.threed.jpct.World world -> c
    com.threed.jpct.SimpleVector rotCache -> d
    void enable() -> a
    void setIntensity(float,float,float) -> a
    void setPosition(com.threed.jpct.SimpleVector) -> a
com.threed.jpct.Lights -> com.a.a.af:
    int rgbScale -> a
    int lightCnt -> b
    int maxLights -> c
    float[] xOrg -> d
    float[] yOrg -> e
    float[] zOrg -> f
    float[] xTr -> g
    float[] yTr -> h
    float[] zTr -> i
    float[] bOrg -> j
    float[] rOrg -> k
    float[] gOrg -> l
    com.threed.jpct.Matrix[] transform -> m
    boolean[] isVisible -> n
    float[] attenuation -> o
    float[] discardDistance -> p
    float[] distanceOverride -> q
    com.threed.jpct.Matrix mat5 -> r
    float getAttenuation(int) -> a
    int addLight(float,float,float,float,float,float) -> a
    void transformLights(com.threed.jpct.Camera) -> a
    void setVisibility(int,boolean) -> a
    void setLightIntensity(int,float,float,float) -> a
    void setPosition(int,float,float,float) -> b
    boolean isFine(int) -> b
    void logError() -> a
com.threed.jpct.Loader -> com.a.a.ag:
    java.lang.String lastFilename -> a
    java.lang.String lastFileData -> b
    boolean optimize -> c
    java.lang.String loadTextFile(java.io.InputStream) -> a
    java.lang.String loadTextFile(java.net.URL,java.lang.String,java.io.InputStream) -> a
    com.threed.jpct.Object3D loadMD2(java.io.InputStream,float) -> a
    com.threed.jpct.Object3D[] load3DS(java.io.InputStream,float) -> b
    void clearCache() -> a
    int getInt(byte[],int) -> a
    int getShortInt(byte[],int) -> b
    int getUnsignedByte(byte[],int) -> c
    int unsignedByteToInt(byte) -> a
    java.lang.String getSequenceName(java.lang.String) -> a
    byte[] loadBinaryFile(java.net.URL,java.lang.String,java.io.InputStream,int) -> a
    byte[] loadBinaryFile(java.net.URL,java.lang.String,java.io.InputStream,int,java.lang.String[]) -> a
    com.threed.jpct.Object3D loadMD2(java.net.URL,java.lang.String,java.io.InputStream,float) -> a
    com.threed.jpct.Object3D[] load3DS(java.net.URL,java.lang.String,java.io.InputStream,float) -> b
    com.threed.jpct.Object3D create3DSObject(java.lang.String,float[][],int,int[][],int,java.lang.String[],java.lang.String[],float[][],java.lang.String[],com.threed.jpct.RGBColor[],int[],int) -> a
    void getChunkHeader(byte[],int,int[]) -> a
com.threed.jpct.Logger -> com.a.a.ah:
    int mode -> a
    int logLevel -> b
    java.lang.String[] HEAD -> c
    void setOnError(int) -> a
    void setLogLevel(int) -> b
    int getLogLevel() -> a
    void log(java.lang.String) -> a
    void log(java.lang.Throwable) -> a
    void log(java.lang.Throwable,int) -> a
    boolean isDebugEnabled() -> b
    void log(java.lang.String,int) -> a
com.threed.jpct.Matrix -> com.a.a.ai:
    com.threed.jpct.Matrix globalTmpMat -> b
    float spi -> c
    float mspi -> d
    float cpi -> e
    float mcpi -> f
    float spih -> g
    float mspih -> h
    float cpih -> i
    float mcpih -> j
    float[][] mat -> a
    float[] mat0 -> k
    float[] mat1 -> l
    float[] mat2 -> m
    float[] mat3 -> n
    float lastRot -> o
    float lastSin -> p
    float lastCos -> q
    boolean isIdentity() -> a
    void setIdentity() -> b
    void scalarMul(float) -> a
    void matMul(com.threed.jpct.Matrix) -> a
    void rotateX(float) -> b
    void rotateY(float) -> c
    void rotateAxis(com.threed.jpct.SimpleVector,float) -> a
    com.threed.jpct.SimpleVector getZAxis() -> c
    void translate(float,float,float) -> a
    com.threed.jpct.Matrix cloneMatrix() -> d
    com.threed.jpct.Matrix invert(com.threed.jpct.Matrix) -> b
    com.threed.jpct.Matrix invert3x3() -> e
    com.threed.jpct.Matrix invert3x3(com.threed.jpct.Matrix) -> c
    void orthonormalize() -> f
    float[] fillDump(float[]) -> a
    void setDump(float[]) -> b
    void setTo(com.threed.jpct.Matrix) -> d
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    void transformToGL() -> g
com.threed.jpct.Mesh -> com.a.a.aj:
    int serializeMethod -> y
    com.threed.jpct.IVertexController myController -> a
    boolean normalsCalculated -> b
    boolean tangentsCalculated -> c
    int anzVectors -> d
    int maxVectors -> e
    int anzCoords -> f
    int anzTri -> g
    int[][] points -> h
    float[] xOrg -> i
    float[] yOrg -> j
    float[] zOrg -> k
    float[] nxOrg -> l
    float[] nyOrg -> m
    float[] nzOrg -> n
    int[] coords -> o
    int obbStart -> p
    int obbEnd -> q
    short[] sxOrg -> r
    short[] syOrg -> s
    short[] szOrg -> t
    short[] snxOrg -> u
    short[] snyOrg -> v
    short[] snzOrg -> w
    float[][] tangentVectors -> x
    boolean locked -> z
    java.util.HashMap verts -> A
    void applyVertexController() -> a
    void strongStrip(com.threed.jpct.World,com.threed.jpct.Object3D) -> a
    void compress() -> b
    com.threed.jpct.Mesh cloneMesh(boolean) -> a
    void calcNormals() -> c
    java.util.Vector[] calcNormalsMD2(java.util.Vector[]) -> a
    com.threed.jpct.SimpleVector calcCenter() -> d
    void rotateMesh(com.threed.jpct.Matrix,float,float,float,float) -> a
    float[] calcBoundingBox() -> e
    void calculateTangentVectors(com.threed.jpct.Vectors) -> a
    void calcNormalsFast() -> f
com.threed.jpct.Object3D -> com.a.a.ak:
    com.threed.jpct.Lights DUMMY_LIGHTS -> ai
    int nextID -> aj
    int globalListenerCount -> a
    java.util.ArrayList lightsList -> ak
    float[][] litData -> al
    com.threed.jpct.Matrix[] matrixArray -> am
    java.util.HashMap matrixThreadCache -> an
    com.threed.jpct.SimpleVector tempCS -> ao
    com.threed.jpct.SimpleVector tempTC -> ap
    com.threed.jpct.Matrix mat7 -> aq
    com.threed.jpct.Matrix mat71 -> ar
    com.threed.jpct.Matrix matBill -> as
    boolean isTrans -> b
    int transMode -> c
    boolean isEnvmapped -> d
    boolean isVisible -> e
    boolean isLit -> f
    boolean isPotentialCollider -> g
    boolean mayCollide -> h
    boolean wasCollider -> i
    float sortOffset -> j
    boolean isStatic -> k
    com.threed.jpct.Vectors objVectors -> l
    com.threed.jpct.Mesh objMesh -> m
    com.threed.jpct.World myWorld -> n
    int number -> o
    java.lang.String name -> p
    int[] texture -> q
    int[][] multiTex -> r
    int[][] multiMode -> s
    int maxStagesUsed -> t
    boolean usesMultiTexturing -> u
    com.threed.jpct.Object3D[] parent -> v
    int parentCnt -> w
    int transValue -> x
    float centerX -> y
    float centerY -> z
    float centerZ -> A
    boolean hasBoundingBox -> B
    boolean isFlatShaded -> C
    boolean object3DRendered -> D
    java.util.ArrayList compiled -> E
    boolean dynamic -> F
    boolean modified -> G
    boolean indexed -> H
    boolean forcedIndexed -> I
    int batchSize -> J
    boolean staticUV -> K
    float[][] nearestLights -> L
    boolean toStrip -> M
    com.threed.jpct.IRenderHook renderHook -> N
    boolean sharing -> O
    com.threed.jpct.Object3D shareWith -> P
    com.threed.jpct.Matrix transBuffer -> Q
    java.util.ArrayList collisionListener -> R
    boolean disableListeners -> S
    int[] polygonIDs -> at
    int pIDCount -> au
    int lastAddedID -> av
    int lowestPos -> aw
    int highestPos -> ax
    float xRotationCenter -> T
    float yRotationCenter -> U
    float zRotationCenter -> V
    com.threed.jpct.GLSLShader shader -> W
    int addColorR -> ay
    int addColorG -> az
    int addColorB -> aA
    com.threed.jpct.Matrix rotationMatrix -> aB
    com.threed.jpct.Matrix translationMatrix -> aC
    com.threed.jpct.Matrix originMatrix -> aD
    com.threed.jpct.Matrix mat2 -> aE
    com.threed.jpct.Matrix mat5 -> aF
    com.threed.jpct.Matrix mat6 -> aG
    boolean doCulling -> X
    boolean doSpecularLighting -> Y
    com.threed.jpct.Animation anim -> Z
    boolean neverOptimize -> aH
    float scaleFactor -> aI
    boolean isBillBoard -> aJ
    com.threed.jpct.OcTree ocTree -> aK
    boolean lazyTransforms -> aL
    com.threed.jpct.Matrix transCache -> aM
    com.threed.jpct.Matrix invCache -> aN
    com.threed.jpct.Matrix transCacheDump -> aO
    com.threed.jpct.Matrix invCacheDump -> aP
    boolean optimizeColDet -> aQ
    float largestPolygonSize -> aR
    com.threed.jpct.PolygonManager polyManager -> aS
    int ellipsoidMode -> aT
    java.lang.Object userObj -> aU
    boolean reverseCulling -> aa
    boolean hasBeenBuild -> ab
    boolean hasBeenStripped -> ac
    boolean fixedPointMode -> ad
    boolean oneTextureSet -> ae
    com.threed.jpct.RGBColor addColorInstance -> aV
    java.util.HashSet sectors -> aW
    int maxLights -> aX
    com.threed.jpct.Matrix textureMatrix -> af
    boolean skipPivot -> ag
    com.threed.jpct.Virtualizer virtualizer -> ah
    float[] dirColParam -> aY
    float[] origColParam -> aZ
    float[] dirCol -> ba
    float[] origCol -> bb
    float[] pvecCol -> bc
    float[] tvecCol -> bd
    float[] qvecCol -> be
    float[] edge1Col -> bf
    float[] edge2Col -> bg
    com.threed.jpct.SimpleVector t0Vel -> bh
    com.threed.jpct.SimpleVector fromBaseToIntersection -> bi
    com.threed.jpct.SimpleVector planeIntersectionPoint -> bj
    com.threed.jpct.Plane trianglePlane -> bk
    float[] newT -> bl
    com.threed.jpct.Object3D createDummyObj() -> a
    void setUserObject(java.lang.Object) -> a
    java.lang.Object getUserObject() -> b
    com.threed.jpct.Object3D mergeObjects(com.threed.jpct.Object3D,com.threed.jpct.Object3D) -> a
    void init(int) -> c
    void compile() -> c
    void compile(boolean,boolean) -> a
    boolean isCompiled() -> d
    void touch() -> e
    void setAnimationSequence(com.threed.jpct.Animation) -> a
    com.threed.jpct.Animation getAnimationSequence() -> f
    void animate(float,int) -> a
    void setVisibility(boolean) -> a
    boolean getVisibility() -> g
    void calcBoundingBox() -> h
    void build() -> i
    void build(boolean) -> b
    void disableVertexSharing() -> j
    int getID() -> k
    java.lang.String getName() -> l
    void setName(java.lang.String) -> a
    void setCulling(boolean) -> c
    void setSpecularLighting(boolean) -> d
    void setTransparency(int) -> a
    com.threed.jpct.GLSLShader getShaderInternal() -> m
    void setTransparencyMode(int) -> b
    boolean hasVertexAlpha() -> n
    com.threed.jpct.RGBColor getAdditionalColor() -> o
    void clearObject() -> p
    void rotateX(float) -> a
    void rotateAxis(com.threed.jpct.SimpleVector,float) -> a
    void enableLazyTransformations() -> q
    float getScale() -> r
    com.threed.jpct.Matrix getRotationMatrix() -> s
    void setRotationMatrix(com.threed.jpct.Matrix) -> a
    void rotateMesh() -> t
    com.threed.jpct.Mesh getMesh() -> u
    com.threed.jpct.PolygonManager getPolygonManager() -> v
    void setBoundingBox(float,float,float,float,float,float) -> a
    com.threed.jpct.Matrix getWorldTransformation(com.threed.jpct.Matrix) -> b
    void setCenter(com.threed.jpct.SimpleVector) -> a
    com.threed.jpct.SimpleVector getCenter() -> w
    void fillTransformedCenter(com.threed.jpct.SimpleVector) -> c
    void setRotationPivot(com.threed.jpct.SimpleVector) -> b
    void calcCenter() -> x
    com.threed.jpct.OcTree getOcTree() -> y
    void calcNormals() -> z
    void setTexture(java.lang.String) -> b
    int addTriangle(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,int) -> a
    int addTriangle(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,int,boolean) -> a
    int addTriangle(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,int,boolean,int[]) -> a
    int addTriangle(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,int,boolean,int[],com.threed.jpct.TextureInfo) -> a
    int addMD2Triangle(int,float,float,int,float,float,int,float,float) -> a
    com.threed.jpct.Matrix recurseObjectsBillboarded(com.threed.jpct.Matrix) -> c
    com.threed.jpct.Matrix recurseObjects(com.threed.jpct.Matrix) -> d
    float recurseScaling(float) -> b
    boolean transformVertices(com.threed.jpct.FrameBuffer) -> a
    void addCompiled(com.threed.jpct.CompiledInstance) -> a
    void render() -> A
    void appendToObject(com.threed.jpct.Object3D) -> a
    void getProjectedPoint(float,float,float,com.threed.jpct.SimpleVector,float[],com.threed.jpct.Matrix) -> a
    void reallyStrip() -> B
    com.threed.jpct.Matrix getTmpMatrix(int) -> d
    void compileInternal() -> C
com.threed.jpct.Object3DCompiler -> com.a.a.al:
    void compile(com.threed.jpct.Object3D) -> a
    void append(java.lang.StringBuilder,int) -> a
com.threed.jpct.Object3DList -> com.a.a.am:
    com.threed.jpct.Object3D[] objList -> a
    int SIZE -> b
    int count -> c
    int size() -> a
    void addElement(com.threed.jpct.Object3D) -> a
    com.threed.jpct.Object3D[] getInternalArray() -> b
    com.threed.jpct.Object3D elementAt(int) -> a
    void removeElementAt(int) -> b
    boolean contains(com.threed.jpct.Object3D) -> b
    boolean removeElement(com.threed.jpct.Object3D) -> c
com.threed.jpct.OcTree -> com.a.a.an:
    int curLeafs -> c
    com.threed.jpct.OcTreeNode[] leafList -> d
    boolean[] visibleLeafs -> e
    java.util.ArrayList allLeafs -> f
    int[] leafCount -> g
    boolean useForRendering -> a
    com.threed.jpct.OcTreeNode root -> b
    java.util.ArrayList getFilledLeafs() -> a
    void fillLeafs(com.threed.jpct.OcTreeNode) -> a
    boolean getRenderingUse() -> b
    int getVisibleLeafs(com.threed.jpct.Matrix,float,float) -> a
    com.threed.jpct.OcTreeNode[] getLeafList() -> c
    void markAllLeafsAsVisible(com.threed.jpct.OcTreeNode,int[]) -> a
    void getVisibleLeafs(com.threed.jpct.OcTreeNode,com.threed.jpct.Matrix,float,float,int[]) -> a
com.threed.jpct.OcTreeNode -> com.a.a.ao:
    int nodeID -> j
    com.threed.jpct.OcTreeNode[] children -> a
    com.threed.jpct.OcTreeNode parent -> b
    int childCnt -> c
    int id -> d
    int polyCnt -> e
    int pointCnt -> f
    int[] polyList -> g
    int[] pointList -> h
    com.threed.jpct.SimpleVector[] pList -> i
    int isVisible(com.threed.jpct.Matrix,float,float) -> a
    int getID() -> a
    com.threed.jpct.OcTreeNode[] getChildren() -> b
    int getChildCount() -> c
    int getPolyCount() -> d
    int[] getPolygons() -> e
com.threed.jpct.Plane -> com.a.a.ap:
    float equation3 -> b
    com.threed.jpct.SimpleVector normal -> a
com.threed.jpct.PolygonManager -> com.a.a.aq:
    com.threed.jpct.Object3D myObj -> a
    int getPolygonTexture(int) -> a
    void setPolygonTexture(int,com.threed.jpct.TextureInfo) -> a
    boolean outOfBounds(int) -> b
com.threed.jpct.Polyline -> com.a.a.ar:
    com.threed.jpct.FloatBufferWrapper vertices -> a
    int length -> b
    com.threed.jpct.RGBColor color -> c
    float width -> d
    int transparencyMode -> e
    float percentage -> f
    boolean visible -> g
    int getLength() -> a
    com.threed.jpct.RGBColor getColor() -> b
    java.nio.FloatBuffer getData() -> c
    float getWidth() -> d
    int getTransparencyMode() -> e
    boolean isVisible() -> f
com.threed.jpct.RGBColor -> com.a.a.as:
    com.threed.jpct.RGBColor BLACK -> a
    com.threed.jpct.RGBColor WHITE -> b
    com.threed.jpct.RGBColor RED -> c
    com.threed.jpct.RGBColor GREEN -> d
    com.threed.jpct.RGBColor BLUE -> e
    int red -> f
    int blue -> g
    int green -> h
    int alpha -> i
    float nred -> j
    float nblue -> k
    float ngreen -> l
    float nalpha -> m
    float getNormalizedRed() -> a
    float getNormalizedGreen() -> b
    float getNormalizedBlue() -> c
    float getNormalizedAlpha() -> d
    int getRed() -> e
    int getBlue() -> f
    int getGreen() -> g
com.threed.jpct.ShaderLocator -> com.a.a.at:
    android.content.res.AssetManager assets -> a
    java.lang.Integer rawResourceId -> b
    android.content.res.Resources res -> c
    java.lang.String getShaderCode(java.lang.String) -> a
    java.lang.String loadFromRaw(java.lang.String) -> b
    java.lang.String loadFromAssets(java.lang.String) -> c
    java.lang.String loadFromJar(java.lang.String) -> d
    java.lang.String getFileFromZip(java.lang.String,java.io.InputStream) -> a
com.threed.jpct.SimpleVector -> com.a.a.au:
    java.util.List cache -> e
    com.threed.jpct.SimpleVector ORIGIN -> a
    float x -> b
    float y -> c
    float z -> d
    com.threed.jpct.SimpleVector DOWN -> f
    float[] array -> g
    com.threed.jpct.SimpleVector create() -> a
    com.threed.jpct.SimpleVector create(float,float,float) -> a
    void set(float,float,float) -> b
    void set(com.threed.jpct.SimpleVector) -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.threed.jpct.SimpleVector normalize() -> b
    com.threed.jpct.SimpleVector normalize(com.threed.jpct.SimpleVector) -> b
    com.threed.jpct.SimpleVector calcCross(com.threed.jpct.SimpleVector) -> c
    float calcDot(com.threed.jpct.SimpleVector) -> d
    float lengthBetween(com.threed.jpct.SimpleVector) -> e
    void scalarMul(float) -> a
    void matMul(com.threed.jpct.Matrix) -> a
    void add(com.threed.jpct.SimpleVector) -> f
    void sub(com.threed.jpct.SimpleVector) -> g
    java.util.List access$0() -> c
com.threed.jpct.SimpleVector$CacheableSimpleVector -> com.a.a.av:
    void finalize() -> finalize
com.threed.jpct.Texture -> com.a.a.aw:
    int[] TEXTURE_SIZES -> u
    boolean defaultTo4bpp -> v
    boolean defaultToMipmapping -> w
    boolean defaultToKeepPixels -> x
    int MARKER_NOTHING -> a
    int MARKER_DELETE_AND_UPLOAD -> b
    int width -> c
    int height -> d
    int[] texels -> e
    byte[] zippedTexels -> f
    boolean alpha -> g
    boolean isUnicolor -> h
    boolean repeat -> i
    boolean bilinear -> j
    boolean mipmap -> k
    boolean enabled -> l
    boolean convertTo4444 -> m
    boolean etc1 -> n
    boolean isShadowMap -> o
    com.threed.jpct.ITextureEffect myEffect -> p
    int fbo -> q
    int renderBuffer -> r
    int lastHandlerId -> s
    boolean nPot -> t
    boolean isLoaded -> y
    int[] storeTexels -> z
    boolean isConverted -> A
    int openGLID -> B
    int markerGL -> C
    int lastRenderer -> D
    int lastRendererMarker -> E
    boolean keepPixels -> F
    java.util.HashMap glIDs -> G
    java.util.HashSet marker -> H
    com.threed.jpct.DepthBuffer depthBuffer -> I
    int getWidth() -> a
    int getHeight() -> b
    void setFiltering(boolean) -> a
    void setMipmap(boolean) -> b
    int getOpenGLID(int) -> a
    void clearIDs(int) -> b
    void setOpenGLID(int,int) -> a
    int getMarker(int) -> c
    void setMarker(int) -> d
    void setMarker(int,int) -> b
    void refill(int[],int,int) -> a
    void loadTexture(java.io.InputStream,android.graphics.Bitmap,boolean) -> a
    int adjustSize(int) -> e
    void resetIDs() -> c
    com.threed.jpct.Texture createSingleColoredTexture(com.threed.jpct.RGBColor) -> a
com.threed.jpct.TextureInfo -> com.a.a.ax:
    int[] textures -> a
    int[] mode -> b
    float[] u0 -> c
    float[] v0 -> d
    float[] u1 -> e
    float[] v1 -> f
    float[] u2 -> g
    float[] v2 -> h
    int stageCnt -> i
    void add(int,float,float,float,float,float,float,int) -> a
    void set(int,int,float,float,float,float,float,float,int) -> a
com.threed.jpct.TextureManager -> com.a.a.ay:
    com.threed.jpct.Texture[] textures -> a
    com.threed.jpct.Texture dummy -> b
    com.threed.jpct.TextureManager myInstance -> c
    int textureCount -> d
    java.util.HashMap textureList -> e
    int lastID -> f
    java.lang.String lastName -> g
    com.threed.jpct.Virtualizer textureVirtualizer -> h
    com.threed.jpct.TextureManager getInstance() -> a
    void addTexture(java.lang.String) -> a
    void addTexture(java.lang.String,com.threed.jpct.Texture) -> a
    void flush() -> b
    boolean containsTexture(java.lang.String) -> b
    int getTextureID(java.lang.String) -> c
    com.threed.jpct.Texture getTextureByID(int) -> a
    com.threed.jpct.Texture getTexture(java.lang.String) -> d
    void flushOpenGLIDs(int) -> b
    java.lang.String getNameByID(int) -> c
    com.threed.jpct.Virtualizer getVirtualizer() -> c
com.threed.jpct.Vectors -> com.a.a.az:
    float[] nuOrg -> a
    float[] nvOrg -> b
    float[][] uMul -> c
    float[][] vMul -> d
    float[] alpha -> e
    int maxVectors -> f
    com.threed.jpct.Mesh baseMesh -> g
    void createMultiCoords() -> a
    int checkCoords(float,float,float) -> a
    int addVertex(float,float,float) -> b
    void strip() -> b
com.threed.jpct.Virtualizer -> com.a.a.ba:
    int cnt -> a
    int myCnt -> b
    java.util.Map virtualized -> c
    boolean cleaned -> d
    android.content.Context ctx -> e
    long maxSize -> f
    long currentSize -> g
    byte[] buffy -> h
    void freeHandles(com.threed.jpct.Texture) -> a
    boolean isFull() -> a
    boolean restore(com.threed.jpct.Texture) -> b
    java.nio.Buffer restore(com.threed.jpct.CompiledInstance,java.lang.Class,java.lang.String) -> a
    java.nio.ByteBuffer readIntoBuffer(java.io.InputStream) -> a
    java.nio.ByteBuffer readFromCache(java.lang.String) -> a
    boolean storeInCache(java.nio.ByteBuffer,java.lang.String) -> a
    boolean store(com.threed.jpct.CompiledInstance,java.nio.Buffer,java.lang.String) -> a
    void writeInt(int,java.io.OutputStream,boolean) -> a
    void writeShort(short,java.io.OutputStream) -> a
    void finalize() -> finalize
    void cleanUp(android.content.Context) -> a
    void cleanUpInstanceOnly(android.content.Context) -> b
com.threed.jpct.Virtualizer$1 -> com.a.a.bb:
    com.threed.jpct.Virtualizer this$0 -> a
    int compare(java.io.File,java.io.File) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.threed.jpct.VisList -> com.a.a.bc:
    int anzpoly -> a
    int size -> b
    com.threed.jpct.Object3D[] vorg -> c
    int[] vnum -> d
    int[] vertexIndex -> e
    float[] zValue -> f
    int[] stageCnt -> g
    long lastCycle -> h
    int pivotindex -> i
    int msgCnt -> j
    int maxStages -> k
    java.util.ArrayList toFill -> l
    int[] bucket -> m
    void addToFill(com.threed.jpct.Object3D) -> a
    int getMaxSize() -> a
    void clearList() -> b
    void deepClear() -> c
    void addToList(com.threed.jpct.Object3D,float,int,com.threed.jpct.CompiledInstance) -> a
    void fillInstances() -> d
    void sort(int,int) -> a
    void qsort(int,int) -> b
    int partition(int,int,float) -> a
    void findpivot(int,int) -> c
    void fsort(int,int) -> d
    void insertionSort(int,int) -> e
    void flip(int,int) -> f
com.threed.jpct.VisListManager -> com.a.a.bd:
    java.util.HashMap buf2Vis -> b
    boolean isDisposed -> a
    void dispose() -> a
    void finalize() -> finalize
    com.threed.jpct.VisList getVisList(com.threed.jpct.FrameBuffer,com.threed.jpct.VisList) -> a
    void remove(com.threed.jpct.FrameBuffer) -> a
com.threed.jpct.World -> com.a.a.be:
    com.threed.jpct.Object3DCompiler compiler -> r
    java.lang.Thread defaultThread -> a
    com.threed.jpct.Object3DList objectList -> b
    com.threed.jpct.VisList visList -> c
    com.threed.jpct.Camera camera -> d
    com.threed.jpct.Lights lights -> e
    long drawCnt -> f
    boolean useFogging -> g
    int fogModeChanged -> h
    float fogStart -> i
    float fogDistance -> j
    float fogColorR -> k
    float fogColorG -> l
    float fogColorB -> m
    int ambientRed -> n
    int ambientGreen -> o
    int ambientBlue -> p
    com.threed.jpct.GLSLShader globalShader -> q
    com.threed.jpct.VisListManager vlManager -> s
    com.threed.jpct.Object3DList targets -> t
    boolean disposed -> u
    float nearPlane -> v
    float farPlane -> w
    float nearPlaneOld -> x
    float farPlaneOld -> y
    com.threed.jpct.Matrix tmpMat -> z
    com.threed.jpct.Matrix tmpMatCol -> A
    com.threed.jpct.Plane slidePlaneTmp -> B
    java.util.List lines -> C
    boolean calledRender -> D
    void dispose() -> a
    com.threed.jpct.Camera getCamera() -> b
    void setCameraTo(com.threed.jpct.Camera) -> a
    void setPlanes(boolean) -> a
    void removeObject(com.threed.jpct.Object3D) -> a
    int addObject(com.threed.jpct.Object3D) -> b
    int addLight(com.threed.jpct.SimpleVector,float,float,float) -> a
    void setLightPosition(int,com.threed.jpct.SimpleVector) -> a
    void setLightVisibility(int,boolean) -> a
    void setLightIntensity(int,float,float,float) -> a
    void setAmbientLight(int,int,int) -> a
    void fillAmbientLight(float[]) -> a
    void compileAllObjects() -> c
    void renderScene(com.threed.jpct.FrameBuffer) -> a
    void draw(com.threed.jpct.FrameBuffer) -> b
    void setGlobalShader(com.threed.jpct.GLSLShader) -> a
    com.threed.jpct.Object3D getInternalObjectByName(java.lang.String) -> a
    void draw(com.threed.jpct.FrameBuffer,boolean,int) -> a
    void compile(com.threed.jpct.Object3D) -> c
    void finalize() -> finalize
com.threed.jpct.ZipHelper -> com.a.a.bf:
    byte[] buffer -> a
    int[] unzip(byte[]) -> a
    int[] byteArrayToInt(byte[]) -> b
com.threed.jpct.util.BitmapHelper -> com.a.a.a.a:
    int callCount -> a
    android.graphics.Bitmap loadImage(java.io.InputStream) -> a
    android.graphics.Bitmap convert(android.graphics.drawable.Drawable) -> a
    void cleanUp() -> a
com.threed.jpct.util.Overlay -> com.a.a.a.b:
    com.threed.jpct.World world -> a
    com.threed.jpct.Object3D plane -> b
    com.threed.jpct.util.Overlay$MyController adjuster -> c
    int upperLeftX -> d
    int upperLeftY -> e
    int lowerRightX -> f
    int lowerRightY -> g
    int upperLeftU -> h
    int upperLeftV -> i
    int lowerRightU -> j
    int lowerRightV -> k
    int pivotX -> l
    int pivotY -> m
    float depth -> n
    boolean disposed -> o
    boolean uvChange -> p
    float rotation -> q
    boolean rotMode -> r
    int cnt -> s
    com.threed.jpct.SimpleVector tmp1 -> t
    com.threed.jpct.SimpleVector tmp2 -> u
    com.threed.jpct.SimpleVector tmp3 -> v
    com.threed.jpct.SimpleVector tmp4 -> w
    com.threed.jpct.SimpleVector tmp5 -> x
    com.threed.jpct.SimpleVector tmp6 -> y
    com.threed.jpct.Matrix tmpMat -> z
    void dispose() -> a
    void update(com.threed.jpct.FrameBuffer) -> a
    void finalize() -> finalize
com.threed.jpct.util.Overlay$MyController -> com.a.a.a.c:
    com.threed.jpct.SimpleVector[] poss -> a
    void apply() -> c
    void setNewBounds(com.threed.jpct.SimpleVector,com.threed.jpct.SimpleVector,com.threed.jpct.SimpleVector,com.threed.jpct.SimpleVector) -> a
