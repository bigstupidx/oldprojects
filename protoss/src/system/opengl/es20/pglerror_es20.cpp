// pglerror_es20.cpp
// To detect and return the error generated by OpenGL.
// 
// Copyright 2013 Cooee. All rights reserved.
// 
// Hongwei Li lihw81@gmail.com
// 

#include "../pglerror.h"

#include <PSystem/pdebug.h>

#include <GLES2/gl2.h>
#include <GLES2/gl2ext.h> 


bool P_APIENTRY pGlErrorCheck(const pChar* file, pUint32 line, PLogLevelEnum logLevel)
{
    GLenum err = glGetError();
    if (err == GL_NO_ERROR)
    {
        return true;
    }

    pInt32 errmsg = 0;

    static const pChar* ERRMSG[] =
    {
        "GL_INVALID_ENUM",
        "GL_INVALID_FRAMEBUFFER_OPERATION",
        "GL_INVALID_VALUE",
        "GL_INVALID_OPERATION",
        "GL_OUT_OF_MEMORY",
    };

    switch (err)
    {
        case GL_INVALID_ENUM: errmsg = 0;  break;
        case GL_INVALID_FRAMEBUFFER_OPERATION: errmsg = 1; break;
        case GL_INVALID_VALUE: errmsg = 2;  break;
        case GL_INVALID_OPERATION: errmsg = 3;  break;
        case GL_OUT_OF_MEMORY: errmsg = 4;  break;
    }

    pLog(logLevel, file, line, "%s", ERRMSG[errmsg]); 
    if (logLevel >= P_LOG_ERROR)
    {
        pAssertFunction(ERRMSG[errmsg], file, line, g_assertStyle);
    }

    return false;
}

